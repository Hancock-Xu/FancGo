{"version":3,"names":[],"mappings":"","sources":["upload_resume.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\n$(document).ready(function () {\n\n    $('#resume_chooser_form').submit(function (e) {\n        // capture submit\n        e.preventDefault();\n        var fd = new FormData(this); // XXX: Neex AJAX2\n\n        // You could show a loading image for example...\n\n        $.ajax({\n            url: $(this).attr('action'),\n            xhr: function xhr() {\n                // custom xhr (is the best)\n\n                var xhr = new XMLHttpRequest();\n                var total = 0;\n\n                // Get the total size of files\n                $.each(document.getElementById('files').files, function (i, file) {\n                    total += file.size;\n                });\n\n                // Called when upload progress changes. xhr2\n                xhr.upload.addEventListener(\"progress\", function (evt) {\n                    // show progress like example\n                    var loaded = (evt.loaded / total).toFixed(2) * 100; // percent\n\n                    $('#progress').text('Uploading... ' + loaded + '%');\n                }, false);\n\n                return xhr;\n            },\n            type: 'post',\n            processData: false,\n            contentType: false,\n            data: fd,\n            success: function success(data) {\n                // do something...\n                $('#progress').html('Upload Succeed');\n            }\n        });\n    });\n});\n\n},{}]},{},[1]);\n"],"file":"upload_resume.js","sourceRoot":"/source/"}